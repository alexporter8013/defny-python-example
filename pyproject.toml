[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "lorrel-py"
dynamic = ["version"]
description = 'Example project for integrating Dafny into another language'
readme = "README.md"
requires-python = ">=3.8"
keywords = []
authors = [
  { name = "Alex Porter", email = "awrporter91@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  
]

[tool.setuptools.dynamic]
version = {attr = "lorrel_py.__version__"}

[project.urls]
Documentation = "https://github.com/alexporter8013/lorrel-py#readme"
Issues = "https://github.com/alexporter8013/lorrel-py/issues"
Source = "https://github.com/alexporter8013/lorrel-py"

[tool.hatch.version]
path = "src/lorrel_py/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --strict --install-types --non-interactive {args:src/lorrel_py tests}"

[tool.hatch.envs.lint]
dependencies = [
  "ruff>=0.3.3",
]
[tool.hatch.envs.lint.scripts]
check = "mypy --strict --install-types --non-interactive {args:src/lorrel_py tests}"

[tool.coverage.run]
source_pkgs = ["lorrel_py", "tests"]
branch = true
parallel = true
omit = [
  "src/lorrel_py/__about__.py",
]

[tool.coverage.paths]
lorrel_py = ["src/lorrel_py", "*/lorrel-py/src/lorrel_py"]
tests = ["tests", "*/lorrel-py/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
